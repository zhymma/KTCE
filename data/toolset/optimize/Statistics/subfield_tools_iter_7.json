{"Mean and Median": [], "Mean": [], "Median": [{"tool": "def calculate_median(data):\n    \n    \n    import numpy as np\n    \n    if not data:\n        raise ValueError(\"The data list is empty. Median cannot be calculated.\")\n    \n    data_sorted = sorted(data)\n    n = len(data_sorted)\n    mid_index = n // 2\n    \n    if n % 2 == 1:\n        # If the number of data points is odd, return the middle number\n        return data_sorted[mid_index]\n    else:\n        # If the number of data points is even, return the average of the middle two numbers\n        return (data_sorted[mid_index - 1] + data_sorted[mid_index]) / 2.0", "subfield": "Median", "tool_name": "calculate_median", "tool_type": "function", "description": "Calculate the median of a dataset.\n    \n    The median is the value separating the higher half from the lower half of a data sample.\n    For a dataset containing an odd number of observations, it is the middle number.\n    For a dataset with an even number of observations, it is the average of the two middle numbers.", "docstring": "Calculate the median of a dataset.\n    \n    The median is the value separating the higher half from the lower half of a data sample.\n    For a dataset containing an odd number of observations, it is the middle number.\n    For a dataset with an even number of observations, it is the average of the two middle numbers.\n    \n    Parameters:\n    data (list of float or int): A list containing the dataset.\n    \n    Returns:\n    float: The median of the dataset.", "Freq": 9.0, "TSR": 7.0, "experience_pool": "Experience 1:\nProblem: The tool is called with a list of integers instead of a list of floats.\nSolution: Modify the input data to be a list of floats.\n```python\ndata = [1.0, 3.0, 2.0]\nmedian = calculate_median(data)\nprint(median)\n```\nOutput: 2.0\n\nExperience 2:\nProblem: The tool is called with an empty list.\nSolution: Handle the case when the data list is empty and raise a ValueError.\n```python\ndata = []\nmedian = calculate_median(data)\nprint(median)\n```\nOutput: ValueError: The data list is empty. Median cannot be calculated."}, {"tool": "def calculate_mean(data):\n    \n    if not data:\n        raise ValueError(\"The data list is empty. Mean cannot be calculated.\")\n    \n    return sum(data) / len(data)", "subfield": "Median", "tool_name": "calculate_mean", "tool_type": "function", "description": "Calculate the mean of a dataset.\n    \n    The mean is the average of all the numbers in a dataset.", "docstring": "Calculate the mean of a dataset.\n    \n    The mean is the average of all the numbers in a dataset.\n    \n    Parameters:\n    data (list): A list of numbers\n    \n    Returns:\n    float: The mean of the dataset", "Freq": 0, "TSR": 0}]}