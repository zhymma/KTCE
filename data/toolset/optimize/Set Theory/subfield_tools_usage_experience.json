{"def set_intersection(set_a, set_b):\n    \n    return set_a & set_b": [{"iter": 0, "id": "6680", "is_correct": false, "problem": "An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?", "answer": "2", "report": true, "result": "10", "code": "def solution():\n    \"\"\"An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?\"\"\"\n    total_slices = 18\n    pepperoni_slices = 10\n    mushroom_slices = 10\n    # Let n be the number of slices with both pepperoni and mushrooms\n    n = set_intersection(set(range(1, pepperoni_slices+1)), set(range(1, mushroom_slices+1)))\n    result = len(n)\n    return result\n\nprint(solution())\n"}, {"iter": 0, "id": "5993", "is_correct": false, "problem": "Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?", "answer": "2", "report": true, "result": "12", "code": "def solution():\n    \"\"\"Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. \n    Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?\"\"\"\n    \n    brown_eyes = 12\n    lunch_box = 20\n    total_students = 30\n    \n    # Calculate the least possible number of students who have brown eyes and a lunch box\n    brown_eyes_and_lunch_box = set_intersection(set(range(1, brown_eyes+1)), set(range(1, lunch_box+1)))\n    \n    result = len(brown_eyes_and_lunch_box)\n    \n    return result\n\n# Call the solution function and print the result\nprint(solution())\n"}, {"iter": 3, "id": "5993", "is_correct": false, "problem": "Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?", "answer": "2", "report": true, "result": "12", "code": "def solution():\n    brown_eyes = 12\n    lunch_box = 20\n\n    # Calculate the least possible number of students who have brown eyes and a lunch box\n    brown_eyes_and_lunch_box = set_intersection(set(range(1, brown_eyes+1)), set(range(1, lunch_box+1)))\n\n    result = len(brown_eyes_and_lunch_box)\n\n    return result\n\n# Output the result\nprint(solution())\n"}, {"iter": 3, "id": "6680", "is_correct": false, "problem": "An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?", "answer": "2", "report": true, "result": "10", "code": "def solution():\n    \"\"\"Calculate the number of slices with both pepperoni and mushrooms on an 18-slice pizza.\"\"\"\n    total_slices = 18\n    pepperoni_slices = 10\n    mushroom_slices = 10\n    \n    # Calculate the number of slices with both pepperoni and mushrooms\n    n = set_intersection(set(range(1, pepperoni_slices+1)), set(range(1, mushroom_slices+1)))\n    result = len(n)\n    \n    return result\n\n# Call the solution function and print the result\nprint(solution())\n"}, {"iter": 3, "id": "6191", "is_correct": false, "problem": "One hundred people were surveyed. Of these, $87$ indicated they liked Mozart and $70$ indicated they liked Bach. What is the minimum number of people surveyed who could have said they liked both Mozart and Bach?", "answer": "57", "report": true, "result": "30", "code": "def solution():\n    \"\"\"One hundred people were surveyed. Of these, 87 indicated they liked Mozart and 70 indicated they liked Bach. What is the minimum number of people surveyed who could have said they liked both Mozart and Bach?\"\"\"\n    total_people = 100\n    mozart_likes = 87\n    bach_likes = 70\n\n    # Calculate the minimum number of people who could have said they liked both Mozart and Bach\n    mozart_not_bach = total_people - bach_likes\n    both_mozart_bach = set_intersection(set(range(1, mozart_likes+1)), set(range(1, mozart_not_bach+1)))\n\n    result = len(both_mozart_bach)\n    return result\n\nprint(solution())\n"}, {"iter": 4, "id": "6680", "is_correct": false, "problem": "An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?", "answer": "2", "report": true, "result": "10", "code": "def solution():\n    \"\"\"An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?\"\"\"\n    total_slices = 18\n    pepperoni_slices = 10\n    mushroom_slices = 10\n    # Let n be the number of slices with both pepperoni and mushrooms\n    n = set_intersection(set(range(1, pepperoni_slices+1)), set(range(1, mushroom_slices+1)))\n    result = len(n)\n    return result\n\nprint(solution())\n"}, {"iter": 4, "id": "5993", "is_correct": false, "problem": "Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?", "answer": "2", "report": true, "result": "12", "code": "def solution():\n    \"\"\"Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. \n    Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?\"\"\"\n    \n    brown_eyes = 12\n    lunch_box = 20\n    total_students = 30\n    \n    # Calculate the least possible number of students who have brown eyes and a lunch box\n    brown_eyes_no_lunch_box = total_students - lunch_box\n    brown_eyes_and_lunch_box = set_intersection(set(range(1, brown_eyes+1)), set(range(1, lunch_box+1)))\n    \n    result = len(brown_eyes_and_lunch_box)\n    \n    return result\n\n# Call the solution function and print the result\nprint(solution())\n"}, {"iter": 4, "id": "6191", "is_correct": false, "problem": "One hundred people were surveyed. Of these, $87$ indicated they liked Mozart and $70$ indicated they liked Bach. What is the minimum number of people surveyed who could have said they liked both Mozart and Bach?", "answer": "57", "report": true, "result": "30", "code": "def solution():\n    \"\"\"One hundred people were surveyed. Of these, 87 indicated they liked Mozart and 70 indicated they liked Bach. What is the minimum number of people surveyed who could have said they liked both Mozart and Bach?\"\"\"\n    total_people = 100\n    mozart_likes = 87\n    bach_likes = 70\n\n    # Calculate the minimum number of people who could have said they liked both Mozart and Bach\n    mozart_not_bach = total_people - bach_likes\n    both_mozart_bach = set_intersection(set(range(1, mozart_likes+1)), set(range(1, mozart_not_bach+1)))\n\n    result = len(both_mozart_bach)\n    return result\n\nprint(solution())\n"}], "def inclusion_exclusion(*args):\n    \n    total_sum = sum(x[1] for x in args if len(x) == 2)\n    intersection_sum = sum(x[1] for x in args if len(x) == 3)\n    return total_sum - intersection_sum": [{"iter": 1, "id": "6238", "is_correct": false, "problem": "There are 30 people in my math class.  12 of them have cool dads, 15 of them have cool moms, and 9 of them have cool dads and cool moms.  How many people have moms and dads who are both uncool?", "answer": "12", "report": true, "result": "-6", "code": "def solution():\n    \"\"\"There are 30 people in my math class. 12 of them have cool dads, 15 of them have cool moms, and 9 of them have cool dads and cool moms. How many people have moms and dads who are both uncool?\"\"\"\n    \n    cool_dads = 12\n    cool_moms = 15\n    cool_both = 9\n    \n    uncool_both = inclusion_exclusion((cool_dads, 12), (cool_moms, 15), (cool_both, 9))\n    \n    uncool_parents = 30 - uncool_both\n    \n    return uncool_parents\n\nprint(solution())\n"}, {"iter": 1, "id": "5997", "is_correct": false, "problem": "Ten students are taking both algebra and drafting. There are 24 students taking algebra. There are 11 students who are taking drafting only. How many students are taking algebra or drafting but not both?", "answer": "25", "report": true, "result": "79", "code": "def solution():\n    \"\"\"Ten students are taking both algebra and drafting. There are 24 students taking algebra. \n    There are 11 students who are taking drafting only. How many students are taking algebra or drafting but not both?\"\"\"\n    \n    algebra = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}\n    drafting = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}\n    algebra_only = 14\n    drafting_only = 11\n    \n    students_not_both = inclusion_exclusion((algebra, 24), (drafting, 30), (algebra_only, 14), (drafting_only, 11))\n    \n    return students_not_both\n\nprint(solution())\n"}, {"iter": 1, "id": "2119", "is_correct": false, "problem": "Let $\\mathcal{S}$ be the set $\\lbrace1,2,3,\\ldots,10\\rbrace$ Let $n$ be the number of sets of two non-empty disjoint subsets of $\\mathcal{S}$. (Disjoint sets are defined as sets that have no common elements.) Find the remainder obtained when $n$ is divided by $1000$.\n", "answer": "501", "report": true, "result": "10", "code": "def solution():\n    # Using the inclusion-exclusion principle to find the count of elements in the union of multiple sets\n    n = inclusion_exclusion(({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 10), ({}, 0), ({}, 0))\n    result = n % 1000\n    return result\n\n# Calculate and print the result\nprint(solution())\n"}, {"iter": 1, "id": "5559", "is_correct": false, "problem": "100 people who were surveyed and asked the question: ``Is fuchsia kinda pink, or purply?'' Of them, 60 believe that fuchsia is ``kinda pink'' and 27 believe it is both ``kinda pink,'' and also ``purply.''  Another 17 think that fuchsia is neither ``kinda pink'' nor ``purply.''\n\nHow many of those 100 people believe that fuchsia is ``purply''?", "answer": "50", "report": true, "result": "204", "code": "def solution():\n    \"\"\"100 people who were surveyed and asked the question: \n    \"Is fuchsia kinda pink, or purply?\" Of them, 60 believe that fuchsia is \"kinda pink\" \n    and 27 believe it is both \"kinda pink\" and also \"purply.\" Another 17 think that fuchsia \n    is neither \"kinda pink\" nor \"purply.\" How many of those 100 people believe that fuchsia is \"purply\"?\n    \"\"\"\n    total_people = 100\n    kinda_pink = 60\n    kinda_pink_and_purply = 27\n    neither_kind_pink_nor_purply = 17\n    \n    # Using the inclusion-exclusion principle to find the count of people who believe fuchsia is \"purply\"\n    purply = inclusion_exclusion((set(), total_people), (set(), kinda_pink), (set(), kinda_pink_and_purply), (set(), neither_kind_pink_nor_purply))\n    \n    result = purply\n    return result\n\nprint(solution())\n"}], "def set_symmetric_difference(set_a, set_b):\n    \n    return set_a ^ set_b": [{"iter": 1, "id": "6626", "is_correct": false, "problem": "Andrew and John are both Beatles fans.  Their respective collections share nine of the same albums.  Andrew has seventeen albums in his collection.  Six albums are in John's collection, but not Andrew's.  How many albums are in either Andrew's or John's collection, but not both?", "answer": "14", "report": true, "result": "11", "code": "def solution():\n    \"\"\"Andrew and John are both Beatles fans. Their respective collections share nine of the same albums. Andrew has seventeen albums in his collection. Six albums are in John's collection, but not Andrew's. How many albums are in either Andrew's or John's collection, but not both?\"\"\"\n    \n    # Number of albums in Andrew's collection\n    andrew_albums = 17\n    \n    # Number of albums in John's collection\n    john_albums = 6\n    \n    # Number of albums shared by both\n    shared_albums = 9\n    \n    # Number of albums in either Andrew's or John's collection, but not both\n    unique_albums = set_symmetric_difference(set(range(andrew_albums)), set(range(john_albums)))\n    \n    result = len(unique_albums)\n    \n    return result\n\nprint(solution())\n"}], "def set_complement(universal_set, subset):\n    \n    return universal_set - subset": [{"iter": 1, "id": "2030", "is_correct": true, "problem": "How many non-empty subsets of $\\{ 1 , 2, 3, 4, 5, 6, 7, 8 \\}$ consist entirely of odd numbers?", "answer": "15", "report": true, "result": "15", "code": "def solution():\n    \"\"\"How many non-empty subsets of {1, 2, 3, 4, 5, 6, 7, 8} consist entirely of odd numbers?\"\"\"\n    universal_set = {1, 2, 3, 4, 5, 6, 7, 8}\n    odd_numbers = {1, 3, 5, 7}\n    \n    # Calculate the complement of the subset of odd numbers within the universal set\n    complement = set_complement(universal_set, odd_numbers)\n    \n    # Calculate the number of non-empty subsets of the subset of odd numbers\n    num_subsets = 2**len(odd_numbers) - 1\n    \n    return num_subsets\n\nprint(solution())\n"}, {"iter": 1, "id": "6699", "is_correct": false, "problem": "Of the 60 students in the drama club, 36 take mathematics, 27 take physics and 20 students take both mathematics and physics. How many drama club students take neither mathematics nor physics?", "answer": " 17", "report": true, "result": "44", "code": "def solution():\n    \"\"\"Of the 60 students in the drama club, 36 take mathematics, 27 take physics and 20 students take both mathematics and physics.\n    How many drama club students take neither mathematics nor physics?\"\"\"\n    \n    total_students = 60\n    math_students = 36\n    physics_students = 27\n    both_students = 20\n    \n    # Calculate students taking only math\n    only_math_students = math_students - both_students\n    \n    # Calculate students taking only physics\n    only_physics_students = physics_students - both_students\n    \n    # Calculate the complement of the subset of students taking either math or physics\n    students_taking_neither = set_complement(set(range(total_students)), set(range(only_math_students)) | set(range(only_physics_students)))\n    \n    return len(students_taking_neither)\n\nprint(solution())\n"}], "def set_intersection(num_elements_a, num_elements_b):\n    \n    set_a = set(range(1, num_elements_a + 1))\n    set_b = set(range(1, num_elements_b + 1))\n    \n    return set_a & set_b": [{"iter": 1, "id": "5993", "is_correct": false, "problem": "Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?", "answer": "2", "report": true, "result": "12", "code": "def solution():\n    \"\"\"Calculate the least possible number of students who have brown eyes and a lunch box.\"\"\"\n    brown_eyes = 12\n    lunch_box = 20\n    students_total = 30\n    \n    # Calculate the least possible number of students who have brown eyes and a lunch box\n    brown_eyes_lunch_box = set_intersection(brown_eyes, lunch_box)\n    \n    return len(brown_eyes_lunch_box)\n\n# Output the result\nprint(solution())\n"}, {"iter": 1, "id": "6680", "is_correct": false, "problem": "An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?", "answer": "2", "report": true, "result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}", "code": "def solution():\n    \"\"\"Calculates the number of pizza slices that have both pepperoni and mushrooms.\"\"\"\n    total_slices = 18\n    pepperoni_slices = 10\n    mushroom_slices = 10\n    \n    # Let n be the number of slices with both pepperoni and mushrooms\n    n = set_intersection(pepperoni_slices, mushroom_slices)\n    \n    return n\n\n# Output the result\nprint(solution())\n"}], "def set_intersection(num_slices, num_property_a, num_property_b):\n    \n    return set(range(1, min(num_property_a, num_property_b) + 1))": [{"iter": 2, "id": "2119", "is_correct": false, "problem": "Let $\\mathcal{S}$ be the set $\\lbrace1,2,3,\\ldots,10\\rbrace$ Let $n$ be the number of sets of two non-empty disjoint subsets of $\\mathcal{S}$. (Disjoint sets are defined as sets that have no common elements.) Find the remainder obtained when $n$ is divided by $1000$.\n", "answer": "501", "report": true, "result": "10", "code": "def solution():\n    num_slices = 10\n    num_property_a = 10\n    num_property_b = 10\n    n = len(set_intersection(num_slices, num_property_a, num_property_b))\n    result = n % 1000\n    return result\n\nprint(solution())\n"}, {"iter": 2, "id": "6680", "is_correct": false, "problem": "An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?", "answer": "2", "report": true, "result": "10", "code": "def solution():\n    \"\"\"An 18-slice pizza was made with only pepperoni and mushroom toppings, and every slice has at least one topping. Exactly ten slices have pepperoni, and exactly ten slices have mushrooms. How many slices have both pepperoni and mushrooms?\"\"\"\n    num_slices = 18\n    num_property_a = 10\n    num_property_b = 10\n    result = len(set_intersection(num_slices, num_property_a, num_property_b))\n    return result\n\nprint(solution())\n"}, {"iter": 2, "id": "5559", "is_correct": false, "problem": "100 people who were surveyed and asked the question: ``Is fuchsia kinda pink, or purply?'' Of them, 60 believe that fuchsia is ``kinda pink'' and 27 believe it is both ``kinda pink,'' and also ``purply.''  Another 17 think that fuchsia is neither ``kinda pink'' nor ``purply.''\n\nHow many of those 100 people believe that fuchsia is ``purply''?", "answer": "50", "report": true, "result": "27", "code": "def solution():\n    \"\"\"100 people who were surveyed and asked the question: ``Is fuchsia kinda pink, or purply?'' Of them, 60 believe that fuchsia is ``kinda pink'' and 27 believe it is both ``kinda pink,'' and also ``purply.'' Another 17 think that fuchsia is neither ``kinda pink'' nor ``purply.'' How many of those 100 people believe that fuchsia is ``purply''?\"\"\"\n    \n    num_people = 100\n    kinda_pink = 60\n    kinda_pink_and_purply = 27\n    neither_kind_pink_nor_purply = 17\n    \n    # Calculate the number of people who believe fuchsia is purply\n    purply = set_intersection(num_people, kinda_pink, kinda_pink_and_purply)\n    \n    result = len(purply)\n    \n    return result\n\n# Call the solution function and print the result\nprint(solution())\n"}, {"iter": 2, "id": "5993", "is_correct": false, "problem": "Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?", "answer": "2", "report": true, "result": "12", "code": "def solution():\n    \"\"\"Twelve students in Mrs. Stephenson's class have brown eyes. Twenty students in the class have a lunch box. \n    Of Mrs. Stephenson's 30 students, what is the least possible number of students who have brown eyes and a lunch box?\"\"\"\n    \n    num_students = 30\n    num_brown_eyes = 12\n    num_lunch_box = 20\n    \n    # The least possible number of students who have brown eyes and a lunch box is the intersection of students with brown eyes and students with a lunch box\n    result = len(set_intersection(num_students, num_brown_eyes, num_lunch_box))\n    \n    return result\n\n# Output the result\nprint(solution())\n"}], "def set_operations(set_list, operation=\"union\"):\n    \n    import functools\n    result_set = set_list[0]  # Initialize with the first set in the list.\n    # Apply the appropriate set operation.\n    if operation == \"union\":\n        result_set = functools.reduce(lambda a, b: a.union(b), set_list[1:], result_set)\n    elif operation == \"intersection\":\n        result_set = functools.reduce(lambda a, b: a.intersection(b), set_list[1:], result_set)\n    elif operation == \"difference\":\n        result_set = functools.reduce(lambda a, b: a.difference(b), set_list[1:], result_set)\n    elif operation == \"symmetric_difference\":\n        result_set = functools.reduce(lambda a, b: a.symmetric_difference(b), set_list[1:], result_set)\n        \n    return result_set": [{"iter": 3, "id": "6699", "is_correct": false, "problem": "Of the 60 students in the drama club, 36 take mathematics, 27 take physics and 20 students take both mathematics and physics. How many drama club students take neither mathematics nor physics?", "answer": " 17", "report": true, "result": "24", "code": "def solution():\n    math_students = set(range(1, 37))  # Students taking mathematics\n    physics_students = set(range(1, 28))  # Students taking physics\n    both_students = set(range(1, 21))  # Students taking both math and physics\n\n    math_only = set_operations([math_students, both_students], operation=\"difference\")  # Students taking only math\n    physics_only = set_operations([physics_students, both_students], operation=\"difference\")  # Students taking only physics\n\n    total_students = set(range(1, 61))  # Total students in the drama club\n\n    neither_students = set_operations([total_students, math_only, physics_only, both_students], operation=\"difference\")\n\n    result = len(neither_students)\n    return result\n\nprint(solution())\n"}, {"iter": 3, "id": "6508", "is_correct": false, "problem": "Of the 50 students in the drama club, 36 take mathematics, 27 take physics and 20 students take both mathematics and physics. How many drama club students take neither mathematics nor physics?", "answer": "7", "report": true, "result": "14", "code": "def solution():\n    math_students = set(range(1, 37))  # Students taking mathematics\n    physics_students = set(range(1, 28))  # Students taking physics\n    both_students = set(range(1, 21))  # Students taking both math and physics\n\n    math_only = set_operations([math_students, both_students], operation=\"difference\")  # Students taking only math\n    physics_only = set_operations([physics_students, both_students], operation=\"difference\")  # Students taking only physics\n\n    total_students = set(range(1, 51))  # Total students in the drama club\n    neither_students = set_operations([total_students, math_only, physics_only, both_students], operation=\"difference\")  # Students taking neither math nor physics\n\n    result = len(neither_students)\n    return result\n\nprint(solution())\n"}]}